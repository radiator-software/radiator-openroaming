# radiator-radsec_outbound_openroaming.conf
# for outbound RadSec connections for openroaming
# 
# Copyright by Radiator Software 2020-2024
# Created: 2022-09-22 kh@radiatorsoftware.com
# Modified: 2024-02-14 kh@radiatorsoftware.com

# Radiator directories
DbDir	/etc/radiator
LogDir	/var/log/radiator
LogFile	%L/radiator-%{GlobalVar:instance}.log

# more detailed logging
LogMicroseconds
LogTraceId
Trace 2 

# minimal StatusServer messages 
StatusServer minimal

# Proxy also unknown attributes
ProxyUnknownAttributes

# Needed only for Radiator <= v4.28, an example how to use custom dictionaries
#DictionaryFile /opt/radiator/radiator/dictionary,/etc/radiator/dictionary.wba

# Dictionary file
DictionaryFile /opt/radiator/radiator/dictionary

# No pidfile is needed when started as a systemd service
PidFile

# Make IPv6 and IPv4 listen sockets completely separate
# Bind only to IPv4 wildcard address
BindV6Only
BindAddress	0.0.0.0 

# this instance listens only RADIUS authentication 
AuthPort 16450
AcctPort 16460

# authentication log to file
<AuthLog FILE>

	Identifier AUTHLOG-FILE
	
	Filename %L/authentication-%{GlobalVar:instance}.log

	Include %D/conf.d/authlog-formats.conf

	LogSuccess
	LogFailure
	LogIgnore

</AuthLog>

# accounting log to file
<AcctLog FILE>

	Identifier ACCTLOG-FILE

	Filename %L/accounting-%{GlobalVar:instance}.log

	Include %D/conf.d/acctlog-formats.conf

</AcctLog>

#
# Clients
#

# include loopback clients
Include %D/conf.d/clients-radius-loopback.conf


# Resolver configuration for DNS discovery 
<Resolver>
        # these name servers could be replaced by a local
        # nameserver such as unbound
	Nameservers 8.8.8.8
	Nameservers 8.8.4.4
	Nameservers 9.9.9.9

	#Debug

	# Only one NAPTR-Pattern currently supported (Radiator 4.27)

	# for eduroam
	# NAPTR-Pattern x-eduroam:(radius)\.(tls)

	# for OpenRoaming
	#NAPTR-Pattern aaa+auth:(radius)\.(tls)\.(tcp)
	NAPTR-Pattern ^aaa\+auth:radius\.tls\.tcp\z 
	DirectAddressLookup 0
</Resolver>

<AuthBy DNSROAM>

	Identifier AUTHBY-DNSROAM-OPENROAMING
	Port 2083
	Protocol            radsec
	Transport           tcp
	Secret              radsec
	ReconnectTimeout    1
	NoreplyTimeout      5
	ConnectOnDemand
	TLS_CAPath %D/certificates/%{GlobalVar:instance}/ca/
	TLS_CertificateChainFile %D/certificates/%{GlobalVar:instance}/client/CertificateChainFile.pem
	TLS_CertificateType PEM
	TLS_PrivateKeyFile %D/certificates/%{GlobalVar:instance}/client/PrivateKeyFile.pem

	# These TLS settings are left liberal for interoperability.
	# They can be hardened, but functionality and interoperability with other
	# implementations need to tested in practice. 
	TLS_SecurityLevel 1
	TLS_Protocols TLSv1,TLSv1.1,TLSv1.2,TLSv1.3

	# 3gppnetwork.org => pub.3gppnetwork.org conversion
	RewriteTargetRealm      s/(.+[0-9])\.3gppnetwork\.org\z/$1.pub.3gppnetwork.org/

	# If no target server found (or is not responsive?),
	# redespatch the request with Identifier added as
	# OSC-Environment-Identifier
	RedespatchIfNoTarget

	# Use this to check certificate CN
	# You may need to enable this if there are OpenRoaming
	# certificates, which do not have CN as a SubjectAltName
	# in the certificate.
        #TLS_ExpectedPeerName CN=.*

</AuthBy>

<AuthBy RADSEC>

	Identifier AUTHBY-HASHBALANCE-RADSEC-WRIX

	Port		2083

	# Using HASHBALANCE with RadSec requires this 
	ProxyAlgorithm	HashBalance
	
	Secret	radsec

	#UseStatusServerForFailureDetect
	#KeepaliveTimeout	30
	NoreplyTimeout		5
	MaxFailedRequests	2
	FailureBackoffTime	60
	# is this only if none of these respond?
	NoReplyReject

	#Host wrix1.example.com
	#Host wrix2.example.com

	# ensure IPv6 address retrieval for name
	#Host	ipv6:wrix1.example.com
	#Host	ipv6:wrix2.example.com

	TLS_CAPath %D/certificates/%{GlobalVar:instance}/ca/
	TLS_CertificateChainFile %D/certificates/%{GlobalVar:instance}/client/CertificateChainFile.pem
	TLS_CertificateType PEM
	TLS_PrivateKeyFile %D/certificates/%{GlobalVar:instance}/client/PrivateKeyFile.pem

	# Adjust and use this if you want to check the PolicyOID
	#TLS_PolicyOID 1.3.6.1.4.1.25178.3.1.2

	# These TLS settings are left liberal for interoperability.
	# They can be hardened, but functionality and interoperability with other
	# implementations need to tested in practice.
	TLS_SecurityLevel 1
        TLS_Protocols TLSv1,TLSv1.1,TLSv1.2,TLSv1.3	

	# Use this to check certificate CN 
	# You may need to enable this if there are OpenRoaming
	# certificates, which do not have CN as a SubjectAltName
	# in the certificate.
	#TLS_ExpectedPeerName CN=.*

</AuthBy>

# If DNS discovery fails, RedespatchIfNoTarget sends the request here
<Handler OSC-Environment-Identifier=AUTHBY-DNSROAM-OPENROAMING>

        Identifier HANDLER-HASHBALANCE-RADSEC-WRIX

        # Acknowledge accounting in any case
        AccountingAccepted

        # try some static servers such as WRIX service provider etc.
        #AuthBy AUTHBY-HASHBALANCE-RADSEC-WRIX

        # this rejects by default all those realms, for which DNSROAM
        # has not been able to find responding RadSec servers
        <AuthBy INTERNAL>
                Identifier HANDLER-HASHBALANCE-RADSEC-WRIX-AUTHBY-INTERNAL
                AuthResult REJECT
                AcctResult ACCEPT
                RejectReason HANDLER-HASHBALANCE-RADSEC-WRIX-INTERNAL: Realm is not reachable.
        </AuthBy>
        RejectHasReason

        AuthLog AUTHLOG-FILE
        AcctLog ACCTLOG-FILE

	# Stripping and adding requests is not important as we reject these
	# requests but if the requests are forwarded, you should consider
        # enabling these both.
        Include %D/conf.d/strip-attributes.conf

        # Add to outbound request a Chargeable-User-Identity request and
        # the WBAID. Sub-Id is not required so this can be 4WBAID.
        #AddToRequestIfNotExist Chargeable-User-Identity=\000,Operator-Name=4SUBID.WBAID


</Handler>

# an example handler to forward a realm to roaming partner without
# performing a DNS discovery, e.g. settled OpenRoaming
#<Handler Realm=wlan.mnc001.mcc001.3gppnetwork.org>
#
#	Identifier HANDLER-MNC001.MCC001.3GPPNETWORK.ORG
#
#	# Acknowledge accounting in any case
#	AccountingAccepted
#
#	# Use specific RadSec AuthBy
#	AuthBy AUTHBY-HASHBALANCE-RADSEC-WRIX
#
#	AuthLog AUTHLOG-FILE
#	AcctLog ACCTLOG-FILE
#
#	# Strip listed attributes from the requests and replies
#	Include %D/conf.d/strip-attributes.conf
#
#</Handler>

# Try first to find target server via DNS
<Handler Realm=/.+/>

	Identifier HANDLER-DNSROAM-OPENROAMING

	AuthBy AUTHBY-DNSROAM-OPENROAMING
	
	AuthLog AUTHLOG-FILE
	AcctLog ACCTLOG-FILE

	Include %D/conf.d/strip-attributes.conf

	# Add to outbound request a Chargeable-User-Identity request and
	# the WBAID. Sub-Id is not required so this can be 4WBAID.
	AddToRequestIfNotExist Chargeable-User-Identity=\000,Operator-Name=4SUBID.WBAID

</Handler>

# Default handler rejects authentication, accepts accounting
<Handler>
        Identifier HANDLER-DEFAULT
        AccountingAccepted
        <AuthBy INTERNAL>
                Identifier HANDLER-DEFAULT
                AuthResult REJECT
                AcctResult ACCEPT
                RejectReason HANDLER-DEFAULT: No matching handler found.
        </AuthBy>
        RejectHasReason
        AuthLog AUTHLOG-FILE
        AcctLog ACCTLOG-FILE
</Handler>

# There is no need for session database
<SessionDatabase NULL>
        Identifier SESSION-DATABASE-NULL
</SessionDatabase>


